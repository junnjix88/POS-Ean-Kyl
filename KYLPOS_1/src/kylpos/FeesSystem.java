/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kylpos;


import com.sun.glass.events.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

/**
 *
 * @author Cecilio
 */
public class FeesSystem extends javax.swing.JFrame {
    
    Connection con;
    Statement stmt;
    ResultSet rs;
    ResultSet rs1;
    Connection con1;
    Statement stmt1; 
    ResultSet rs2, rs3, rs4, rs5, rs6, rs7,rs8,rs9,rs10;
    
    PreparedStatement pst;
    PreparedStatement pst1;
    private final double lines;
    double price2;
    double totalamt = 0;
    int productid;
    String productname2;
    double itemcount2;
    double itemtotalamount;
    /**
     * Creates new form FeesSystem
     */
    public FeesSystem() {
        this.lines = 20;
        initComponents();
             
         jTextArea1.setText("***********************\n");
         jTextArea1.setText(jTextArea1.getText()+" Cecilio Sale Receipt   \n");
         jTextArea1.setText(jTextArea1.getText()+"***********************\n");
          
        jPanel2.setVisible(false);
        jtxfQty.setVisible(false);
        jbtnfQty.setVisible(false);
        jLabel7.setVisible(false);
        
        jPanel3.setVisible(false);
        jLabel3.setVisible(false);
        jTXFqtyRem.setVisible(false);
        jbtnRem2.setVisible(false);

        
       newtransaction(); 
       jTextArea1.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jbtnAdd = new javax.swing.JButton();
        jbtnRemove = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jlblTotalAmount = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jlblTransaction = new javax.swing.JLabel();
        jlblCashier = new javax.swing.JLabel();
        jtxfProductId = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jlblBranch = new javax.swing.JLabel();
        jbtnNewTransaction = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jtxfQty = new javax.swing.JTextField();
        jbtnfQty = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jbtnRem2 = new javax.swing.JButton();
        jTXFqtyRem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Enter Product ID");

        jbtnAdd.setText("ADD");
        jbtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddActionPerformed(evt);
            }
        });

        jbtnRemove.setText("Remove item");
        jbtnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRemoveActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Transaction ID");

        jlblTotalAmount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlblTotalAmount.setText("total");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Total amount");

        jlblTransaction.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlblTransaction.setText("12348");

        jlblCashier.setText("Cashier");

        jtxfProductId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keypressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jlblBranch.setText("Branch");

        jbtnNewTransaction.setText("New");
        jbtnNewTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNewTransactionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jtxfProductId, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 21, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblCashier, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbtnNewTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtxfProductId, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jlblCashier, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlblBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnNewTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(133, 133, 133))
        );

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 1, 10)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(0, 51, 255));
        jTextArea1.setRows(5);
        jTextArea1.setAlignmentX(0.2F);
        jTextArea1.setAlignmentY(0.2F);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Pay print receipt");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 255, 255));

        jtxfQty.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxfQty.setText("1");
        jtxfQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                confirmaddkeypressed(evt);
            }
        });

        jbtnfQty.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtnfQty.setText("confirm qty.");
        jbtnfQty.setActionCommand("confirm qty. add");
        jbtnfQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnfQtyActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Quantity");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtxfQty)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jbtnfQty, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxfQty, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnfQty, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 102, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Remove quantity");

        jbtnRem2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbtnRem2.setText("confirm qty. remove");
        jbtnRem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRem2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jbtnRem2, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                    .addComponent(jTXFqtyRem))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jTXFqtyRem, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jbtnRem2, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
              
jTextArea1.setEnabled(true);
jTextArea1.setText(jTextArea1.getText()+"\n");
String dispamount3 = (Integer.toString((int)totalamt));
jTextArea1.setText(jTextArea1.getText()+"\n");
jTextArea1.setText(jTextArea1.getText()+"total amount "+dispamount3);
PrintSupport.printComponent(jTextArea1);
       
        validtransaction();
        cleartable();
        jlblTotalAmount.setText("0");
        newtransaction();
        jtxfProductId.requestFocus();
        jTextArea1.setEnabled(false);
         jTextArea1.setEnabled(true);
         jTextArea1.setText("");
         jTextArea1.setText("***********************\n");
         jTextArea1.setText(jTextArea1.getText()+" Cecilio Sale Receipt   \n");
         jTextArea1.setText(jTextArea1.getText()+"***********************\n");               
         jTextArea1.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jbtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddActionPerformed

    
        String search4 = jtxfProductId.getText();
        int search5 = Integer.parseInt(search4);
        int log70=0;
        try {

            
            Dconnect();
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sql = "SELECT PRODUCTID, PRODUCTNAME, PRICE FROM Ceciliodb.forsale where PRODUCTID = '"+search5+"'";            
            rs = stmt.executeQuery(sql);
            
            while (rs.next())
            {
                
                if (rs.getInt(1) == search5)
                {
                    
                    log70 = 2;
                    break;
                }
                else{jLabel1.setText("ID not found");}
                
            }
            if (log70 == 2)
            {
                
                
                productid = (rs.getInt(1));//productid2
                String productname = (rs.getString(2));
                double price = (rs.getDouble(3));
                stmt.close(); con.close(); rs.close();
        productname2 = productname;
        price2=price;
                
        jPanel1.setVisible(false);
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        jlblTotalAmount.setVisible(false);
        jLabel4.setVisible(false);
        jlblTransaction.setVisible(false);
        jlblCashier.setVisible(false);
        
        jButton1.setVisible(false);
        jbtnAdd.setVisible(false);
        jbtnRemove.setVisible(false);
        jtxfProductId.setVisible(false);
        
        jPanel2.setVisible(true);
        jtxfQty.setVisible(true);
        jbtnfQty.setVisible(true);
        jLabel7.setVisible(true);
        
        jPanel3.setVisible(false);
        jLabel3.setVisible(false);
        jTXFqtyRem.setVisible(false);
        jbtnRem2.setVisible(false);


        
            }
            else{}
            if (log70 != 2){JOptionPane.showMessageDialog(FeesSystem.this,"product ID not found");}
        } catch (SQLException ex) {
            Logger.getLogger(FeesSystem.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(FeesSystem.this,"product ID not found");
        }
        
        jtxfQty.requestFocus();
    }//GEN-LAST:event_jbtnAddActionPerformed

    private void jbtnfQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnfQtyActionPerformed
        // TODO add your handling code here:
        jPanel1.setVisible(true);
        jLabel1.setVisible(true);
        jLabel2.setVisible(true);
        jlblTotalAmount.setVisible(true);
        jLabel4.setVisible(true);
        jlblTransaction.setVisible(true);
        jlblCashier.setVisible(true);
        
        jButton1.setVisible(true);
        jbtnAdd.setVisible(true);
        jbtnRemove.setVisible(true);
        
        jtxfProductId.setVisible(true);
        
        jPanel2.setVisible(false);
        jtxfQty.setVisible(false);
        jbtnfQty.setVisible(false);
        jLabel7.setVisible(false);
        
        jPanel3.setVisible(false);
        jLabel3.setVisible(false);
        jTXFqtyRem.setVisible(false);
        jbtnRem2.setVisible(false);

        
        jtxfProductId.setText("");
       
        double itemcount = Integer.parseInt(jtxfQty.getText());
        double itemsale = itemcount * price2;
        String itemsale2 = (Integer.toString((int) itemsale));
        
        double dispamount = totalamt + itemsale;
        String dispamount2 = (Integer.toString((int)dispamount));
        totalamt = dispamount;
        itemcount2=itemcount;
        itemtotalamount = itemsale;
        
        Submitsale();
        printreceipt();
        jtxfProductId.requestFocus();
    }//GEN-LAST:event_jbtnfQtyActionPerformed

    private void jbtnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRemoveActionPerformed
        // TODO add your handling code here:
        jPanel3.setVisible(true);
        jLabel3.setVisible(true);
        jTXFqtyRem.setVisible(true);
        jbtnRem2.setVisible(true);
        
        jPanel2.setVisible(false);
        jtxfQty.setVisible(false);
        jbtnfQty.setVisible(false);
        jLabel7.setVisible(false);

        jButton1.setVisible(false);
        jbtnAdd.setVisible(false);
        jbtnRemove.setVisible(false);
        jtxfProductId.setVisible(false);
        String search4 = jtxfProductId.getText();
        int search5 = Integer.parseInt(search4);
        int log70=0;
        try {

            
            Dconnect();
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sql = "SELECT PRODUCTID, PRODUCTNAME, PRICE FROM Ceciliodb.forsale where PRODUCTID = '"+search5+"'";            
            rs = stmt.executeQuery(sql);
            
            while (rs.next())
            {
                
                if (rs.getInt(1) == search5)
                {
                    
                    log70 = 2;
                    break;
                }
                else{jLabel1.setText("ID not found");}
                
            }
            if (log70 == 2)
            {
                
                
                productid = (rs.getInt(1));//productid2
                String productname = (rs.getString(2));
                double price = (rs.getDouble(3));
                stmt.close(); con.close(); rs.close();
        productname2 = productname;
        price2=price;
                
        jPanel1.setVisible(false);
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        jlblTotalAmount.setVisible(false);
        jLabel4.setVisible(false);
        jlblTransaction.setVisible(false);
        jlblCashier.setVisible(false);
        
        jButton1.setVisible(false);
        jbtnAdd.setVisible(false);
        jbtnRemove.setVisible(false);
        jtxfProductId.setVisible(false);
       
            }
            else{}
            if (log70 != 2){JOptionPane.showMessageDialog(FeesSystem.this,"product ID not found");}
        } catch (SQLException ex) {
            Logger.getLogger(FeesSystem.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(FeesSystem.this,"product ID not found");
        }
        
        jTXFqtyRem.requestFocus();
        
       
    }//GEN-LAST:event_jbtnRemoveActionPerformed

    private void jbtnRem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRem2ActionPerformed
                    boolean nt = false;
            try
                    {
                    Integer.parseInt(jTXFqtyRem.getText());
                     nt = true;                                          
                    }
                    catch (NumberFormatException ex)  
                    {
                    nt =false;
		    jTXFqtyRem.setText(null);
                    jTextArea1.setEnabled(false);                    
                    }
        removeitem();
jTextArea1.setEnabled(false);
    }//GEN-LAST:event_jbtnRem2ActionPerformed

    private void jbtnNewTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNewTransactionActionPerformed
                
         jTextArea1.setEnabled(true);
         jTextArea1.setText("");
         jTextArea1.setText("***********************\n");
         jTextArea1.setText(jTextArea1.getText()+" Cecilio Sale Receipt   \n");
         jTextArea1.setText(jTextArea1.getText()+"***********************\n");
                String trans1 = jlblTransaction.getText();
                String cashier1 = jlblCashier.getText();
                String branch1 = jlblBranch.getText();
                
                Calendar cal =new GregorianCalendar();
                int month = cal.get(Calendar.MONTH)+1;
                int year = cal.get(Calendar.YEAR);
                int day = cal.get(Calendar.DAY_OF_MONTH);
                String strdate2 = Integer.toString(day); 
                String strdate3 = Integer.toString(month);
                String strdate4 = Integer.toString(year);
                String strdate5 = strdate2 +"/"+strdate3+"/"+strdate4;
        
                  Date currentDate = GregorianCalendar.getInstance().getTime();
                  DateFormat df = DateFormat.getDateInstance();
                  String dateString = df.format(currentDate);

                  Date d = new Date();
                  SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                  String timeString = sdf.format(d);

                  String time6 = timeString;
                  String date = dateString;
        
        
        int transid7;
        String cashierN = jlblCashier.getText();
        String timedate10 = time6 + dateString;
        try {
            
            Dconnect();
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sql = "SELECT TRANSID4 FROM Ceciliodb.TRANSACTION"; 
            String sq133= "INSERT INTO TRANSACTION (TRANSID4, CASHIER, TIMEDATE6, BRANCH) VALUES (?,?,?,?)";
            rs = stmt.executeQuery(sql);
           rs.next();
            rs.last();
            
            transid7 = (rs.getInt(1));
            int transid9 = transid7 + 1;
            String transid8 = Integer.toString(transid9);
            jlblTransaction.setText(transid8);
            
                  pst=con.prepareStatement(sq133); 
                  pst.setInt(1,transid9);
                  pst.setString(2,cashierN);
                  pst.setString(3,timedate10);
                  pst.setString(4, branch1);
                  pst.execute();

          
          stmt.close(); con.close(); rs.close(); pst.close(); 
            
        } catch (SQLException ex) {
            Logger.getLogger(FeesSystem.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(FeesSystem.this,"Cannot get Transaction Number");
        }
 cleartable();
   jlblTotalAmount.setText("0");
   jTextArea1.setEnabled(false);
    }//GEN-LAST:event_jbtnNewTransactionActionPerformed

    private void keypressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keypressed

         if(evt.getKeyCode()==KeyEvent.VK_ENTER){
             
        String search4 = jtxfProductId.getText();
        int search5 = Integer.parseInt(search4);
        int log70=0;
        try {

            
            Dconnect();
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sql = "SELECT PRODUCTID, PRODUCTNAME, PRICE FROM Ceciliodb.forsale where PRODUCTID = '"+search5+"'";            
            rs = stmt.executeQuery(sql);
            
            while (rs.next())
            {
                
                if (rs.getInt(1) == search5)
                {
                    
                    log70 = 2;
                    break;
                }
                else{jLabel1.setText("ID not found");}
                
            }
            if (log70 == 2)
            {
                
                
                productid = (rs.getInt(1));//productid2
                String productname = (rs.getString(2));

                double price = (rs.getDouble(3));
                stmt.close(); con.close(); rs.close();
        productname2 = productname;
        price2=price;
                
        jPanel1.setVisible(false);
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        jlblTotalAmount.setVisible(false);
        jLabel4.setVisible(false);
        jlblTransaction.setVisible(false);
        jlblCashier.setVisible(false);
        
        jButton1.setVisible(false);
        jbtnAdd.setVisible(false);
        jbtnRemove.setVisible(false);
        jtxfProductId.setVisible(false);
        
        jPanel2.setVisible(true);
        jtxfQty.setVisible(true);
        jbtnfQty.setVisible(true);
        jLabel7.setVisible(true);
        
        jPanel3.setVisible(false);
        jLabel3.setVisible(false);
        jTXFqtyRem.setVisible(false);
        jbtnRem2.setVisible(false);


        
            }
            else{}
            if (log70 != 2){JOptionPane.showMessageDialog(FeesSystem.this,"product ID not found");}
        } catch (SQLException ex) {
            Logger.getLogger(FeesSystem.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(FeesSystem.this,"product ID not found");
        }
        
        jtxfQty.requestFocus();
         }
    }//GEN-LAST:event_keypressed

    private void confirmaddkeypressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmaddkeypressed
if(evt.getKeyCode()==KeyEvent.VK_ENTER){
    
        jPanel1.setVisible(true);
        jLabel1.setVisible(true);
        jLabel2.setVisible(true);
        jlblTotalAmount.setVisible(true);
        jLabel4.setVisible(true);
        jlblTransaction.setVisible(true);
        jlblCashier.setVisible(true);
        
        jButton1.setVisible(true);
        jbtnAdd.setVisible(true);
        jbtnRemove.setVisible(true);
        
        jtxfProductId.setVisible(true);
        
        jPanel2.setVisible(false);
        jtxfQty.setVisible(false);
        jbtnfQty.setVisible(false);
        jLabel7.setVisible(false);
        
        jPanel3.setVisible(false);
        jLabel3.setVisible(false);
        jTXFqtyRem.setVisible(false);
        jbtnRem2.setVisible(false);

        
        jtxfProductId.setText("");
       
        double itemcount = Integer.parseInt(jtxfQty.getText());
        double itemsale = itemcount * price2;
        String itemsale2 = (Integer.toString((int) itemsale));

        
        double dispamount = totalamt + itemsale;
        String dispamount2 = (Integer.toString((int)dispamount));

        totalamt = dispamount;
        itemcount2=itemcount;
        itemtotalamount = itemsale;
        
        Submitsale();
        printreceipt();
        jtxfProductId.requestFocus();
    
}
        
    }//GEN-LAST:event_confirmaddkeypressed
public void Dconnect() throws SQLException
{
                                String host51 = "jdbc:mariadb://YourDB_IP/Ceciliodb";
                                String uName51 = "Cecilio";
                                String uPass51 = "YourPassword";
                                con = DriverManager.getConnection(host51, uName51, uPass51);
}

private void Submitsale(){


                String trans1 = jlblTransaction.getText();
                String cashier1 = jlblCashier.getText();
                String branch1 = jlblBranch.getText();

                Calendar cal =new GregorianCalendar();
                int month = cal.get(Calendar.MONTH)+1;
                int year = cal.get(Calendar.YEAR);
                int day = cal.get(Calendar.DAY_OF_MONTH);
                String strdate2 = Integer.toString(day); 
                String strdate3 = Integer.toString(month);
                String strdate4 = Integer.toString(year);
                String strdate5 = strdate2 +"/"+strdate3+"/"+strdate4;
        
                  Date currentDate = GregorianCalendar.getInstance().getTime();
                  DateFormat df = DateFormat.getDateInstance();
                  String dateString = df.format(currentDate);

                  Date d = new Date();
                  SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                  String timeString = sdf.format(d);

                  String time6 = timeString;
                  String date = dateString;
                  
                try{
                String host61 = "jdbc:mariadb://YourDB_IP/Ceciliodb";
                String uName61 = "Cecilio";
                String uPass61 = "YourPassword";
                con = DriverManager.getConnection(host61,uName61,uPass61);
                  stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                  String sq1l7= "INSERT INTO presaleque(PRODUCTID2, PRODUCTNAME2,PRICE2, QUANTITY, AMOUNT, TRANSACTION, CASHIER, DATE2, TIME2, BRANCH) values (?,?,?,?,?,?,?,?,?,?)";
                  
                  pst=con.prepareStatement(sq1l7); 
                  pst.setInt(1,productid);
                  pst.setString(2,productname2);
                  pst.setDouble(3,price2);
                  pst.setInt(4, (int) itemcount2);
                  pst.setDouble(5,itemtotalamount);
                  pst.setInt(6,Integer.parseInt(trans1));
                  pst.setString(7,cashier1);
                  pst.setString(8,date);
                  pst.setString(9,time6);
                  pst.setString(10,branch1);
                  pst.execute();
                  stmt.close(); con.close(); pst.close();
                  
                  int trans2 = (Integer.parseInt(trans1));
                        Dconnect();
                        stmt1=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        String sq1l3= "SELECT PRODUCTID2,PRODUCTNAME2, PRICE2, QUANTITY, AMOUNT, TRANSACTION FROM presaleque WHERE TRANSACTION ='"+trans2+"' ";
                        rs1 = stmt1.executeQuery(sq1l3); 

                  
            jTable1.setModel(DbUtils.resultSetToTableModel(rs1));            
            DefaultTableModel table = (DefaultTableModel)jTable1.getModel();
            String search = trans1;
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(table);
            jTable1.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(search)); 

            stmt1.close(); con.close(); rs1.close();
            
            
                String host69 = "jdbc:mariadb://YourDB_IP/Ceciliodb";
                String uName69 = "Cecilio";
                String uPass69 = "YourPassword";
                con = DriverManager.getConnection(host69,uName69,uPass69);
                stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        String sql39 = "SELECT SUM(AMOUNT) FROM presaleque WHERE TRANSACTION='"+trans2+"'";
                        rs3 = stmt.executeQuery(sql39);
                        rs3.next();
                        int sum4 = rs3.getInt(1);
                        
                  jlblTotalAmount.setText(Integer.toString(sum4));
             
                 stmt.close(); con.close(); rs3.close(); 
                  
                  }
                  catch(SQLException ex)
                  {
                      System.out.println(ex.getMessage());
                  JOptionPane.showMessageDialog(FeesSystem.this,"Cannot write to sale table");
                  }
}
private void printreceipt(){
    
 jTextArea1.setEnabled(true);
 String trans1 = jlblTransaction.getText();
 int trans2 = (Integer.parseInt(trans1));
 int log70=0;
        try {
                String host69 = "jdbc:mariadb://YourDB_IP/Ceciliodb";
                String uName69 = "Cecilio";
                String uPass69 = "YourPassword";
                con = DriverManager.getConnection(host69,uName69,uPass69);                        
                        stmt1=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        String sq1l3= "SELECT PRODUCTID2,PRODUCTNAME2, PRICE2, QUANTITY, AMOUNT, TRANSACTION FROM presaleque WHERE TRANSACTION ='"+trans2+"' ";
                        rs1 = stmt1.executeQuery(sq1l3); 
                        
                          while (rs1.next())
                            {
                                if (rs1.getInt("TRANSACTION") == trans2)
                                {                                
                                    log70 = 2;
                                    break;
                                }
                                else{}       
                            }
                       
                          
                           if (log70 == 2)
                            {
                                rs1.last();
                                    String productname3 = rs1.getString("PRODUCTNAME2");
                                    double price3 = rs1.getDouble("PRICE2");
                                    int quantity3 = rs1.getInt("QUANTITY");
                                    double amount3 = rs1.getDouble("AMOUNT");
                                    
                                    jTextArea1.setText(jTextArea1.getText() + productname3);
                                    jTextArea1.setText(jTextArea1.getText() + "\n");
                                    jTextArea1.setText(jTextArea1.getText() + price3);
                                    jTextArea1.setText(jTextArea1.getText() + "\n");
                                    jTextArea1.setText(jTextArea1.getText() + "qty " + quantity3 + " amt4. " + amount3);
                                    jTextArea1.setText(jTextArea1.getText() + "\n");
                                  log70 = 0;
             
                            }
                           
                           else{}
                
          con.close(); stmt1.close(); rs1.close();                 
        }  
        catch (SQLException ex) 
        {
            Logger.getLogger(FeesSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    
jTextArea1.setEnabled(false);
}
private void printreceipt2(){
String trans1 = jlblTransaction.getText();
int trans2 = (Integer.parseInt(trans1));
        try {
            Dconnect();
                         int log70=0;
                        stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        String sq1l3= "SELECT PRODUCTID2,PRODUCTNAME2, PRICE2, QUANTITY, AMOUNT, TRANSACTION FROM presaleque WHERE TRANSACTION ='"+trans2+"' ";
                        rs2 = stmt1.executeQuery(sq1l3); 
                            rs.last();                    
                          while (rs2.next())
                            {
                                if (rs2.getInt(6) == trans2)
                                {
                                    log70 = 2;
                                    break;
                                }   
                            }
                           if (log70 == 2)
                            {
                                
                                    String productname3 = rs2.getString("PRODUCTNAME2");
                                    double price3 = rs2.getDouble("PRICE2");
                                    int quantity3 = rs2.getInt("QUANTITY");
                                    double amount3 = rs2.getDouble("AMOUNT");
                                    
                                    jTextArea1.setText(jTextArea1.getText() + productname3);
                                    jTextArea1.setText(jTextArea1.getText() + "\n");
                                    jTextArea1.setText(jTextArea1.getText() + price3);
                                    jTextArea1.setText(jTextArea1.getText() + "\n");
                                    jTextArea1.setText(jTextArea1.getText() + "qty " + quantity3 + " amt4. " + amount3);
                                    jTextArea1.setText(jTextArea1.getText() + "\n");
                                  
                                                                                  
                            }
                           
                           else{}
                
           con.close(); stmt1.close(); rs2.close();                 
        }  
        catch (SQLException ex) 
        {
            Logger.getLogger(FeesSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    

}

private void removeitem()
{
        jPanel1.setVisible(true);
        jLabel1.setVisible(true);
        jLabel2.setVisible(true);
        jlblTotalAmount.setVisible(true);
        jLabel4.setVisible(true);
        jlblTransaction.setVisible(true);
        jlblCashier.setVisible(true);
        
        jButton1.setVisible(true);
        jbtnAdd.setVisible(true);
        jbtnRemove.setVisible(true);
        
        jtxfProductId.setVisible(true);
        
        jPanel3.setVisible(false);
        jTXFqtyRem.setVisible(false);
        jbtnRem2.setVisible(false);
        jLabel3.setVisible(false);
        
        jtxfProductId.setText("");
       
        double itemcount = Integer.parseInt(jTXFqtyRem.getText());
        double itemsale = itemcount * price2;
        String itemsale2 = (Integer.toString((int) itemsale));
        double itemsale3 = 0 - itemsale;
        double dispamount = totalamt + itemsale3;
        String dispamount2 = (Integer.toString((int)dispamount));
        totalamt = dispamount;
        itemcount2= itemcount;
        itemtotalamount = itemsale3;
        
        Submitsale2();
        printreceipt();


}
private void validtransaction()
{
    int transact11 = Integer.parseInt(jlblTransaction.getText());
    String valid2 = "VALID";
    try {
        String host569 = "jdbc:mariadb://DB_ip/Ceciliodb";
        String uName569 = "Cecilio";
        String uPass569 = "Yourpassword";    
        con = DriverManager.getConnection(host569, uName569, uPass569);             
        stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
        String sq166 = "UPDATE presaleque SET presaleque.STATUS = '" + valid2 +"' WHERE presaleque.TRANSACTION = '" + transact11 +"'";
        rs2 = stmt.executeQuery(sq166); 
        
           stmt.close(); con.close(); rs2.close();                     
    }
    
    
    catch (SQLException sQLException) {
        JOptionPane.showMessageDialog(FeesSystem.this, "Cannot change status");
    }




}

private void newtransaction(){

                String trans1 = jlblTransaction.getText();
                String cashier1 = jlblCashier.getText();
                String branch1 = jlblBranch.getText();
                
                Calendar cal =new GregorianCalendar();
                int month = cal.get(Calendar.MONTH)+1;
                int year = cal.get(Calendar.YEAR);
                int day = cal.get(Calendar.DAY_OF_MONTH);
                String strdate2 = Integer.toString(day); 
                String strdate3 = Integer.toString(month);
                String strdate4 = Integer.toString(year);
                String strdate5 = strdate2 +"/"+strdate3+"/"+strdate4;
        
                  Date currentDate = GregorianCalendar.getInstance().getTime();
                  DateFormat df = DateFormat.getDateInstance();
                  String dateString = df.format(currentDate);

                  Date d = new Date();
                  SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                  String timeString = sdf.format(d);

                  String time6 = timeString;
                  String date = dateString;
        
        
        int transid7;
        String cashierN = jlblCashier.getText();
        String timedate10 = time6 + dateString;
        try {
            
            Dconnect();
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sql = "SELECT TRANSID4 FROM Ceciliodb.TRANSACTION"; 
            String sq133= "INSERT INTO TRANSACTION (TRANSID4, CASHIER, TIMEDATE6, BRANCH) VALUES (?,?,?,?)";
            rs = stmt.executeQuery(sql);
            rs.next();
            rs.last();
            
          transid7 = (rs.getInt(1));
          int transid9 = transid7 + 1;
          String transid8 = Integer.toString(transid9);
          jlblTransaction.setText(transid8);
            
                  pst=con.prepareStatement(sq133); 
                  pst.setInt(1,transid9);
                  pst.setString(2,cashierN);
                  pst.setString(3,timedate10);
                  pst.setString(4, branch1);
                  pst.execute();

          
          stmt.close(); con.close(); rs.close(); pst.close(); 
            
        } catch (SQLException ex) {
            Logger.getLogger(FeesSystem.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(FeesSystem.this,"Cannot get Transaction Number");
        }

}
private void cleartable() {
    DefaultTableModel model = (DefaultTableModel)jTable1.getModel();

    while (model.getRowCount() > 0){
        for (int i = 0; i < model.getRowCount(); ++i){
            model.removeRow(i);
        }
    }
}
private void Submitsale2(){
jTextArea1.setEnabled(true);

                String trans1 = jlblTransaction.getText();
                String cashier1 = jlblCashier.getText();
                String branch1 = jlblBranch.getText();

                Calendar cal =new GregorianCalendar();
                int month = cal.get(Calendar.MONTH)+1;
                int year = cal.get(Calendar.YEAR);
                int day = cal.get(Calendar.DAY_OF_MONTH);
                String strdate2 = Integer.toString(day); 
                String strdate3 = Integer.toString(month);
                String strdate4 = Integer.toString(year);
        
                  Date currentDate = GregorianCalendar.getInstance().getTime();
                  DateFormat df = DateFormat.getDateInstance();
                  String dateString = df.format(currentDate);

                  Date d = new Date();
                  SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
                  String timeString = sdf.format(d);

                  String time6 = timeString;
                  String date = dateString;
                  
                  try{
                String host61 = "jdbc:mariadb://YourDB_IP/Ceciliodb";
                String uName61 = "Cecilio";
                String uPass61 = "YourPassword";
                con = DriverManager.getConnection(host61,uName61,uPass61);
                  stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                  String sq1l7= "INSERT INTO presaleque(PRODUCTID2, PRODUCTNAME2,PRICE2, QUANTITY, AMOUNT, TRANSACTION, CASHIER, DATE2, TIME2, BRANCH) values (?,?,?,?,?,?,?,?,?,?)";
                  
                  pst=con.prepareStatement(sq1l7); 
                  pst.setInt(1,productid);
                  pst.setString(2,productname2);
                  pst.setDouble(3,price2);
                  pst.setInt(4,0 - (int) itemcount2);
                  pst.setDouble(5,itemtotalamount);
                  pst.setInt(6,Integer.parseInt(trans1));
                  pst.setString(7,cashier1);
                  pst.setString(8,date);
                  pst.setString(9,time6);
                  pst.setString(10,branch1);
                  pst.execute();
                  stmt.close(); con.close(); pst.close();
                  
                  int trans2 = (Integer.parseInt(trans1));
                        Dconnect();
                        stmt1=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        String sq1l3= "SELECT PRODUCTID2,PRODUCTNAME2, PRICE2, QUANTITY, AMOUNT, TRANSACTION FROM presaleque WHERE TRANSACTION ='"+trans2+"' ";
                        rs1 = stmt1.executeQuery(sq1l3); 
                  
            jTable1.setModel(DbUtils.resultSetToTableModel(rs1));            
            DefaultTableModel table = (DefaultTableModel)jTable1.getModel();
            String search = trans1;
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(table);
            jTable1.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(search)); 

            stmt1.close(); con.close(); rs1.close();
            
            
                String host69 = "jdbc:mariadb://YourDB_IP/Ceciliodb";
                String uName69 = "Cecilio";
                String uPass69 = "YourPassword";
                con = DriverManager.getConnection(host69,uName69,uPass69);
                stmt=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        String sql39 = "SELECT SUM(AMOUNT) FROM presaleque WHERE TRANSACTION='"+trans2+"'";
                        rs3 = stmt.executeQuery(sql39);
                        rs3.next();
                        int sum4 = rs3.getInt(1);
                        
                  jlblTotalAmount.setText(Integer.toString(sum4));
             
                 stmt.close(); con.close(); rs3.close(); 
                  
                  }
                  catch(SQLException ex)
                  {
                  System.out.println(ex.getMessage());
                  JOptionPane.showMessageDialog(FeesSystem.this,"Cannot write to sale table");
                  }
                  jTextArea1.setEnabled(false);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FeesSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FeesSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FeesSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FeesSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FeesSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTXFqtyRem;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbtnAdd;
    private javax.swing.JButton jbtnNewTransaction;
    private javax.swing.JButton jbtnRem2;
    private javax.swing.JButton jbtnRemove;
    private javax.swing.JButton jbtnfQty;
    private javax.swing.JLabel jlblBranch;
    public static javax.swing.JLabel jlblCashier;
    private javax.swing.JLabel jlblTotalAmount;
    private javax.swing.JLabel jlblTransaction;
    private javax.swing.JTextField jtxfProductId;
    private javax.swing.JTextField jtxfQty;
    // End of variables declaration//GEN-END:variables
}
